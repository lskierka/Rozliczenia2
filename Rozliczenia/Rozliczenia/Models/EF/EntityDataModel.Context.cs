//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rozliczenia.Models.EF
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ProdukcjaEntities : DbContext
    {
        public ProdukcjaEntities()
            : base("name=ProdukcjaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<vOferty> vOferty { get; set; }
        public virtual DbSet<vPokazParowanieNaleznosci> vPokazParowanieNaleznosci { get; set; }
        public virtual DbSet<vPokazRozliczenieWplat> vPokazRozliczenieWplat { get; set; }
        public virtual DbSet<vPokazWszystkieNaleznosci> vPokazWszystkieNaleznosci { get; set; }
        public virtual DbSet<vPokazWszystkieWplaty> vPokazWszystkieWplaty { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<spBilingGenerujDowolnaNaleznosc_Result> spBilingGenerujDowolnaNaleznosc(Nullable<int> inDebug, Nullable<int> inIdKontraktu, Nullable<int> inIdWytworu, Nullable<int> inLiczbaOkresow, ObjectParameter outKomunikat)
        {
            var inDebugParameter = inDebug.HasValue ?
                new ObjectParameter("inDebug", inDebug) :
                new ObjectParameter("inDebug", typeof(int));
    
            var inIdKontraktuParameter = inIdKontraktu.HasValue ?
                new ObjectParameter("inIdKontraktu", inIdKontraktu) :
                new ObjectParameter("inIdKontraktu", typeof(int));
    
            var inIdWytworuParameter = inIdWytworu.HasValue ?
                new ObjectParameter("inIdWytworu", inIdWytworu) :
                new ObjectParameter("inIdWytworu", typeof(int));
    
            var inLiczbaOkresowParameter = inLiczbaOkresow.HasValue ?
                new ObjectParameter("inLiczbaOkresow", inLiczbaOkresow) :
                new ObjectParameter("inLiczbaOkresow", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spBilingGenerujDowolnaNaleznosc_Result>("spBilingGenerujDowolnaNaleznosc", inDebugParameter, inIdKontraktuParameter, inIdWytworuParameter, inLiczbaOkresowParameter, outKomunikat);
        }
    
        public virtual ObjectResult<spBilingGenerujNaleznosci_Result> spBilingGenerujNaleznosci(Nullable<int> inDebug, Nullable<int> inIdKontraktu, ObjectParameter outKomunikat)
        {
            var inDebugParameter = inDebug.HasValue ?
                new ObjectParameter("inDebug", inDebug) :
                new ObjectParameter("inDebug", typeof(int));
    
            var inIdKontraktuParameter = inIdKontraktu.HasValue ?
                new ObjectParameter("inIdKontraktu", inIdKontraktu) :
                new ObjectParameter("inIdKontraktu", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spBilingGenerujNaleznosci_Result>("spBilingGenerujNaleznosci", inDebugParameter, inIdKontraktuParameter, outKomunikat);
        }
    
        public virtual ObjectResult<spBilingRozdzielWplateBankowa_Result> spBilingRozdzielWplateBankowa(Nullable<int> inDebug, Nullable<int> inIdWplatyBankowej, ObjectParameter outKomunikat)
        {
            var inDebugParameter = inDebug.HasValue ?
                new ObjectParameter("inDebug", inDebug) :
                new ObjectParameter("inDebug", typeof(int));
    
            var inIdWplatyBankowejParameter = inIdWplatyBankowej.HasValue ?
                new ObjectParameter("inIdWplatyBankowej", inIdWplatyBankowej) :
                new ObjectParameter("inIdWplatyBankowej", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spBilingRozdzielWplateBankowa_Result>("spBilingRozdzielWplateBankowa", inDebugParameter, inIdWplatyBankowejParameter, outKomunikat);
        }
    
        public virtual ObjectResult<spBilingRozliczNaleznosciNierozliczone_Result> spBilingRozliczNaleznosciNierozliczone(Nullable<int> inDebug, Nullable<int> inIdKontraktu, ObjectParameter outKomunikat)
        {
            var inDebugParameter = inDebug.HasValue ?
                new ObjectParameter("inDebug", inDebug) :
                new ObjectParameter("inDebug", typeof(int));
    
            var inIdKontraktuParameter = inIdKontraktu.HasValue ?
                new ObjectParameter("inIdKontraktu", inIdKontraktu) :
                new ObjectParameter("inIdKontraktu", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spBilingRozliczNaleznosciNierozliczone_Result>("spBilingRozliczNaleznosciNierozliczone", inDebugParameter, inIdKontraktuParameter, outKomunikat);
        }
    
        public virtual ObjectResult<spBilingWstawNowegoKlienta_Result> spBilingWstawNowegoKlienta(Nullable<int> inDebug, string inPESEL, string inNIP, Nullable<bool> inCzyKlientBiznesowy, string inImie, string inNazwisko, string inMiasto, string inUlica, string inKodPocztowy, string inNazwaFirmy, ObjectParameter outKomunikat)
        {
            var inDebugParameter = inDebug.HasValue ?
                new ObjectParameter("inDebug", inDebug) :
                new ObjectParameter("inDebug", typeof(int));
    
            var inPESELParameter = inPESEL != null ?
                new ObjectParameter("inPESEL", inPESEL) :
                new ObjectParameter("inPESEL", typeof(string));
    
            var inNIPParameter = inNIP != null ?
                new ObjectParameter("inNIP", inNIP) :
                new ObjectParameter("inNIP", typeof(string));
    
            var inCzyKlientBiznesowyParameter = inCzyKlientBiznesowy.HasValue ?
                new ObjectParameter("inCzyKlientBiznesowy", inCzyKlientBiznesowy) :
                new ObjectParameter("inCzyKlientBiznesowy", typeof(bool));
    
            var inImieParameter = inImie != null ?
                new ObjectParameter("inImie", inImie) :
                new ObjectParameter("inImie", typeof(string));
    
            var inNazwiskoParameter = inNazwisko != null ?
                new ObjectParameter("inNazwisko", inNazwisko) :
                new ObjectParameter("inNazwisko", typeof(string));
    
            var inMiastoParameter = inMiasto != null ?
                new ObjectParameter("inMiasto", inMiasto) :
                new ObjectParameter("inMiasto", typeof(string));
    
            var inUlicaParameter = inUlica != null ?
                new ObjectParameter("inUlica", inUlica) :
                new ObjectParameter("inUlica", typeof(string));
    
            var inKodPocztowyParameter = inKodPocztowy != null ?
                new ObjectParameter("inKodPocztowy", inKodPocztowy) :
                new ObjectParameter("inKodPocztowy", typeof(string));
    
            var inNazwaFirmyParameter = inNazwaFirmy != null ?
                new ObjectParameter("inNazwaFirmy", inNazwaFirmy) :
                new ObjectParameter("inNazwaFirmy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spBilingWstawNowegoKlienta_Result>("spBilingWstawNowegoKlienta", inDebugParameter, inPESELParameter, inNIPParameter, inCzyKlientBiznesowyParameter, inImieParameter, inNazwiskoParameter, inMiastoParameter, inUlicaParameter, inKodPocztowyParameter, inNazwaFirmyParameter, outKomunikat);
        }
    
        public virtual ObjectResult<spBilingWstawWplateBankowaOnline_Result> spBilingWstawWplateBankowaOnline(Nullable<int> inDebug, Nullable<int> inIdKontraktu, Nullable<decimal> inKwotaWplaty, string inTytulWplaty, ObjectParameter outKomunikat)
        {
            var inDebugParameter = inDebug.HasValue ?
                new ObjectParameter("inDebug", inDebug) :
                new ObjectParameter("inDebug", typeof(int));
    
            var inIdKontraktuParameter = inIdKontraktu.HasValue ?
                new ObjectParameter("inIdKontraktu", inIdKontraktu) :
                new ObjectParameter("inIdKontraktu", typeof(int));
    
            var inKwotaWplatyParameter = inKwotaWplaty.HasValue ?
                new ObjectParameter("inKwotaWplaty", inKwotaWplaty) :
                new ObjectParameter("inKwotaWplaty", typeof(decimal));
    
            var inTytulWplatyParameter = inTytulWplaty != null ?
                new ObjectParameter("inTytulWplaty", inTytulWplaty) :
                new ObjectParameter("inTytulWplaty", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spBilingWstawWplateBankowaOnline_Result>("spBilingWstawWplateBankowaOnline", inDebugParameter, inIdKontraktuParameter, inKwotaWplatyParameter, inTytulWplatyParameter, outKomunikat);
        }
    
        public virtual ObjectResult<spBilingZaladujNowaSprzedaz_Result> spBilingZaladujNowaSprzedaz(Nullable<int> inDebug, Nullable<int> inIdKlienta, Nullable<int> inIdOferty, ObjectParameter outKomunikat)
        {
            var inDebugParameter = inDebug.HasValue ?
                new ObjectParameter("inDebug", inDebug) :
                new ObjectParameter("inDebug", typeof(int));
    
            var inIdKlientaParameter = inIdKlienta.HasValue ?
                new ObjectParameter("inIdKlienta", inIdKlienta) :
                new ObjectParameter("inIdKlienta", typeof(int));
    
            var inIdOfertyParameter = inIdOferty.HasValue ?
                new ObjectParameter("inIdOferty", inIdOferty) :
                new ObjectParameter("inIdOferty", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spBilingZaladujNowaSprzedaz_Result>("spBilingZaladujNowaSprzedaz", inDebugParameter, inIdKlientaParameter, inIdOfertyParameter, outKomunikat);
        }
    }
}
